package ru.spbstu.handler.tag;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.bots.AbsSender;
import ru.spbstu.handler.CommandHandler;
import ru.spbstu.repository.TagRepository;
import ru.spbstu.model.Tag;
import ru.spbstu.service.TagService;
import ru.spbstu.service.UserService;

import java.util.List;

@Component
public class ListTagsCommandHandler implements CommandHandler {
    private final TagService tagService;
    private final UserService userService;

    public ListTagsCommandHandler(TagService tagService, UserService userService) {
        this.tagService = tagService;
        this.userService = userService;
    }

    @Override
    public String getCommand() {
        return "/list_tags";
    }

    @Override
    public String getDescription() {
        return "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ç–µ–≥–æ–≤";
    }

    @Override
    public void handle(Update update, AbsSender sender) {
        Long telegramId = update.getMessage().getFrom().getId();
        
        try {
            var user = userService.getUser(telegramId);
            List<Tag> tags = tagService.findAllByUserId(user.getId());
            
            if (tags.isEmpty()) {
                sendMessage(sender, update.getMessage().getChatId(), 
                    "‚ÑπÔ∏è –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ç–µ–≥–æ–≤.\n\nüí° **–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–µ–≥:** `/add_tag <–Ω–∞–∑–≤–∞–Ω–∏–µ>`\n" +
                    "üìù **–ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ –≤–æ–ø—Ä–æ—Å:** `/add_question`");
                return;
            }
            
            StringBuilder response = new StringBuilder();
            response.append("üè∑Ô∏è **–í–∞—à–∏ —Ç–µ–≥–∏:**\n\n");
            
            for (Tag tag : tags) {
                response.append("‚Ä¢ #")
                        .append(tagService.escapeTagForMarkdown(tag.getName()))
                        .append("\n");
            }
            
            response.append("\nüí° **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**\n" +
                "‚Ä¢ `/show_questions_by_tag <—Ç–µ–≥>` - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤\n" +
                "‚Ä¢ `/delete_tag <—Ç–µ–≥>` - —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–≥–∞\n(‚ö†Ô∏è —É–¥–∞–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –±–µ–∑ –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤)");
            
            sendMessage(sender, update.getMessage().getChatId(), response.toString());
            
        } catch (Exception e) {
            sendMessage(sender, update.getMessage().getChatId(), 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–≥–æ–≤: " + e.getMessage());
        }
    }
}
