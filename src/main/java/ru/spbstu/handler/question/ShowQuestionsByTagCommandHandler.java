package ru.spbstu.handler.question;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.bots.AbsSender;
import ru.spbstu.handler.CommandHandler;
import ru.spbstu.model.Question;
import ru.spbstu.service.QuestionService;

import java.util.List;

@Component
public class ShowQuestionsByTagCommandHandler implements CommandHandler {
    private final QuestionService questionService;

    public ShowQuestionsByTagCommandHandler(QuestionService questionService) {
        this.questionService = questionService;
    }

    @Override
    public String getCommand() {
        return "/show_questions_by_tag";
    }

    @Override
    public String getDescription() {
        return "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ç–µ–≥—É";
    }

    @Override
    public void handle(Update update, AbsSender sender) {
        String text = update.getMessage().getText();
        String[] parts = text.split(" ");
        
        if (parts.length < 2) {
            sendMessage(sender, update.getMessage().getChatId(), 
                "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–≥.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/show_questions_by_tag <—Ç–µ–≥>`");
            return;
        }
        if (parts.length > 2) {
            sendMessage(sender, update.getMessage().getChatId(),
                    "‚ùå –£–∫–∞–∂–∏—Ç–µ –æ–¥–∏–Ω —Ç–µ–≥ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/show_questions_by_tag <—Ç–µ–≥>`");
            return;
        }
        String tagName = parts[1].trim();
        Long telegramId = update.getMessage().getFrom().getId();

        if (!questionService.tagExists(telegramId, tagName)) {
            sendMessage(sender, update.getMessage().getChatId(),
                "‚ùå –¢–µ–≥ ¬´" + tagName + "¬ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n\n" +
                "üè∑Ô∏è **–°–æ–∑–¥–∞–π—Ç–µ —Ç–µ–≥:** `/add_tag " + tagName + "`\n" +
                "üìã **–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–≥–æ–≤:** `/list_tags`");
            return;
        }

        List<Question> questions = questionService.getQuestionsByTag(telegramId, tagName);

        if (questions.isEmpty()) {
            sendMessage(sender, update.getMessage().getChatId(),
                "‚ÑπÔ∏è –ü–æ —Ç–µ–≥—É ¬´" + tagName + "¬ª –ø–æ–∫–∞ –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤.");
            return;
        }

        StringBuilder response = new StringBuilder();
        response.append("üìã *–°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ç–µ–≥—É ¬´").append(tagName).append("¬ª* (–≤—Å–µ–≥–æ ").append(questions.size()).append("):\n\n");

        for (Question question : questions) {
            String questionText = question.getText();
            if (questionText.length() > 50) {
                questionText = questionText.substring(0, 47) + "...";
            }
            response.append("‚Ä¢ üÜî: `").append(question.getId()).append("` \n  \uD83D\uDCDA ¬´").append(questionText).append("¬ª\n\n");
        }

        sendMessage(sender, update.getMessage().getChatId(), response.toString());
    }
}
