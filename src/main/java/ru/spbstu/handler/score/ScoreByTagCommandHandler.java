package ru.spbstu.handler.score;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.bots.AbsSender;
import ru.spbstu.handler.CommandHandler;
import ru.spbstu.service.ScoreByTagService;

@Component
public class ScoreByTagCommandHandler implements CommandHandler {

    private final ScoreByTagService scoreByTagService;

    public ScoreByTagCommandHandler(ScoreByTagService scoreByTagService) {
        this.scoreByTagService = scoreByTagService;
    }

    @Override
    public String getCommand() {
        return "/score_by_tag";
    }

    @Override
    public void handle(Update update, AbsSender sender) {
        String text = update.getMessage().getText();
        String[] parts = text.split(" ");

        if (parts.length < 2) {
            sendMessage(sender, update.getMessage().getChatId(),
                    "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–≥.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/score_by_tag <—Ç–µ–≥>`");
            return;
        }
        if (parts.length > 2) {
            sendMessage(sender, update.getMessage().getChatId(),
                    "‚ùå –£–∫–∞–∂–∏—Ç–µ –æ–¥–∏–Ω —Ç–µ–≥ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/score_by_tag <—Ç–µ–≥>`");
            return;
        }
        String tagName = parts[1].trim();
        Long telegramId = update.getMessage().getFrom().getId();

        if (!scoreByTagService.tagExists(telegramId, tagName)) {
            sendMessage(sender, update.getMessage().getChatId(),
                    "‚ùå –¢–µ–≥ ¬´" + tagName + "¬ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n\n" +
                            "üè∑Ô∏è **–°–æ–∑–¥–∞–π—Ç–µ —Ç–µ–≥:** `/add_tag " + tagName + "`\n" +
                            "üìã **–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–≥–æ–≤:** `/list_tags`");
            return;
        }

        Integer score = scoreByTagService.getScoreByUserIdAndTagName(telegramId, tagName);

        sendMessage(sender, telegramId, "\uD83C\uDFC6 –í–∞—à —Å—á–µ—Ç –ø–æ —Ç–µ–≥—É #" +
                tagName + ": " + score);
    }

    @Override
    public String getDescription() {
        return "–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –ø–æ —Ç–µ–≥—É";
    }
}
