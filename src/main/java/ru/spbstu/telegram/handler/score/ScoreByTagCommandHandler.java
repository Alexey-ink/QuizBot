package ru.spbstu.telegram.handler.score;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;
import ru.spbstu.telegram.handler.CommandHandler;
import ru.spbstu.telegram.sender.MessageSender;
import ru.spbstu.service.ScoreByTagService;

@Component
public class ScoreByTagCommandHandler extends CommandHandler {

    private final ScoreByTagService scoreByTagService;

    public ScoreByTagCommandHandler(MessageSender messageSender,
                                    ScoreByTagService scoreByTagService) {
        super(messageSender);
        this.scoreByTagService = scoreByTagService;
    }

    @Override
    public String getCommand() {
        return "/score_by_tag";
    }

    @Override
    public void handle(Update update) {
        Long telegramId = update.getMessage().getFrom().getId();
        String text = update.getMessage().getText();

        logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /score_by_tag –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", telegramId, text);
        try {
            String[] parts = text.split(" ");


            if (parts.length < 2) {
                logger.warn("–ù–µ —É–∫–∞–∑–∞–Ω —Ç–µ–≥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã score_by_tag –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}", telegramId);
                messageSender.sendMessage(update.getMessage().getChatId(),
                        "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–≥.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/score_by_tag <—Ç–µ–≥>`");
                return;
            }
            if (parts.length > 2) {
                logger.warn("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã score_by_tag –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                        telegramId, text);
                messageSender.sendMessage(update.getMessage().getChatId(),
                        "‚ùå –£–∫–∞–∂–∏—Ç–µ –æ–¥–∏–Ω —Ç–µ–≥ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/score_by_tag <—Ç–µ–≥>`");
                return;
            }
            String tagName = parts[1].trim();
            logger.debug("–ó–∞–ø—Ä–æ—Å —Å—á–µ—Ç–∞ –ø–æ —Ç–µ–≥—É '{}' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", tagName, telegramId);

            if (!scoreByTagService.tagExists(tagName)) {
                logger.warn("–¢–µ–≥ '{}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {})", tagName, telegramId);
                messageSender.sendMessage(update.getMessage().getChatId(),
                        "‚ùå –¢–µ–≥ #" + messageSender.escapeTagForMarkdown(tagName) + " –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n\n" +
                                "üè∑Ô∏è **–°–æ–∑–¥–∞–π—Ç–µ —Ç–µ–≥:** `/add_tag " + tagName + "`\n" +
                                "üìã **–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–≥–æ–≤:** `/list_tags`");
                return;
            }

            Integer score = scoreByTagService.getScoreByUserIdAndTagName(telegramId, tagName);
            logger.debug("–°—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –ø–æ —Ç–µ–≥—É '{}': {}", telegramId, tagName, score);

            messageSender.sendMessage(telegramId, "\uD83C\uDFC6 –í–∞—à —Å—á–µ—Ç –ø–æ —Ç–µ–≥—É #" +
                    messageSender.escapeTagForMarkdown(tagName) + ": " + score);
        } catch (Exception e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—á–µ—Ç–∞ –ø–æ —Ç–µ–≥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}: {}",
                    telegramId, e.getMessage(), e);
            messageSender.sendMessage(telegramId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—á–µ—Ç–∞");
        }
    }

    @Override
    public String getDescription() {
        return "–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –ø–æ —Ç–µ–≥—É";
    }
}
