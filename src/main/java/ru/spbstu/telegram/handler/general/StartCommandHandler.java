package ru.spbstu.telegram.handler.general;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;
import ru.spbstu.telegram.handler.CommandHandler;
import ru.spbstu.service.UserService;
import ru.spbstu.telegram.sender.MessageSender;
import ru.spbstu.telegram.session.core.Session;
import ru.spbstu.telegram.session.core.SessionType;
import ru.spbstu.telegram.session.StartSession;
import ru.spbstu.telegram.utils.SessionManager;

import java.util.HashMap;
import java.util.Map;

@Component
public class StartCommandHandler extends CommandHandler {
    private final SessionManager sessionManager;
    private final UserService userService;

    private static final Map<String, String> TIMEZONE_MAP = new HashMap<>();
    static {
        TIMEZONE_MAP.put("–ú–°–ö-1", "Europe/Kaliningrad");
        TIMEZONE_MAP.put("–ú–°–ö",   "Europe/Moscow");
        TIMEZONE_MAP.put("–ú–°–ö+1", "Europe/Samara");
        TIMEZONE_MAP.put("–ú–°–ö+2", "Asia/Yekaterinburg");
        TIMEZONE_MAP.put("–ú–°–ö+3", "Asia/Omsk");
        TIMEZONE_MAP.put("–ú–°–ö+4", "Asia/Krasnoyarsk");
        TIMEZONE_MAP.put("–ú–°–ö+5", "Asia/Irkutsk");
        TIMEZONE_MAP.put("–ú–°–ö+6", "Asia/Yakutsk");
        TIMEZONE_MAP.put("–ú–°–ö+7", "Asia/Vladivostok");
        TIMEZONE_MAP.put("–ú–°–ö+8", "Asia/Magadan");
        TIMEZONE_MAP.put("–ú–°–ö+9", "Asia/Kamchatka");
    }

    public StartCommandHandler(SessionManager sessionManager,
                               UserService userService,
                               MessageSender messageSender) {
        super(messageSender);
        this.sessionManager = sessionManager;
        this.userService = userService;
    }

    @Override
    public String getCommand() {
        return "/start";
    }

    @Override
    public String getDescription() {
        return "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞";
    }

    @Override
    public void handle(Update update) {
        var tgUser = update.getMessage().getFrom();
        Long chatId = update.getMessage().getChatId();
        String userInput = update.getMessage().getText();
        Long telegramId = tgUser.getId();

        logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                telegramId, userInput);

        try {
            userService.getOrCreateUser(tgUser.getId(), tgUser.getUserName());

            Session session = sessionManager.getSession(tgUser.getId());

            if (session == null) {
                session = sessionManager.getOrCreate(tgUser.getId(), StartSession.class);
                logger.debug("–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", session.getType(), telegramId);

                String text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, " +
                        (tgUser.getUserName() != null ? "@" + tgUser.getUserName() : "–≥–æ—Å—Ç—å") + "!\n" +
                        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã!\n\n" +
                        "üí° –ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏\n" +
                        "\uD83C\uDF0D –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:\n" +
                        "- –ú–°–ö-1 (–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥)\n" +
                        "- –ú–°–ö   (–ú–æ—Å–∫–≤–∞)\n" +
                        "- –ú–°–ö+1 (–°–∞–º–∞—Ä–∞)\n" +
                        "- –ú–°–ö+2 (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥)\n" +
                        "- –ú–°–ö+3 (–û–º—Å–∫)\n" +
                        "- –ú–°–ö+4 (–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫)\n" +
                        "- –ú–°–ö+5 (–ò—Ä–∫—É—Ç—Å–∫)\n" +
                        "- –ú–°–ö+6 (–Ø–∫—É—Ç—Å–∫)\n" +
                        "- –ú–°–ö+7 (–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫)\n" +
                        "- –ú–°–ö+8 (–ú–∞–≥–∞–¥–∞–Ω)\n" +
                        "- –ú–°–ö+9 (–ö–∞–º—á–∞—Ç–∫–∞)\n\n" +
                        "üëâ –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ú–°–ö+4)";

                messageSender.sendPlainMessage(update.getMessage().getChatId(), text);

            } else if (session.getType() == SessionType.WAITING_TIMEZONE) {
                logger.debug("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", telegramId);
                String userInputIgnoreCase = userInput.toUpperCase(java.util.Locale.forLanguageTag("ru"));
                if (TIMEZONE_MAP.containsKey(userInputIgnoreCase)) {
                    String zoneId = TIMEZONE_MAP.get(userInputIgnoreCase);
                    userService.updateUserTimezone(tgUser.getId(), zoneId);

                    messageSender.sendMessage(chatId, "‚úÖ –¢–∞–π–º–∑–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: " + userInputIgnoreCase
                            + " (" + zoneId + ")");
                    sessionManager.clearSession(tgUser.getId());
                } else {
                    messageSender.sendMessage(chatId, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.\n–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–°–ö+3");
                }
            } else {
                logger.error("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                        telegramId, session.getType());
            }
        } catch (Exception e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    telegramId, e.getMessage(), e);
            messageSender.sendMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞");
        }
    }
}
