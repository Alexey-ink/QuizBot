package ru.spbstu.telegram.handler.tag;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;
import ru.spbstu.telegram.handler.CommandHandler;
import ru.spbstu.telegram.sender.MessageSender;
import ru.spbstu.service.TagService;
import ru.spbstu.dto.TagDto;

import java.util.List;

@Component
public class ListTagsCommandHandler extends CommandHandler {
    private final TagService tagService;

    public ListTagsCommandHandler(MessageSender messageSender,
                                  TagService tagService) {
        super(messageSender);
        this.tagService = tagService;
    }

    @Override
    public String getCommand() {
        return "/list_tags";
    }

    @Override
    public String getDescription() {
        return "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–µ–≥–æ–≤";
    }

    @Override
    public void handle(Update update) {
        Long telegramId = update.getMessage().getFrom().getId();
        logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /list_tags –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", telegramId);
        try {
            List<TagDto> tagsDto = tagService.findAll();
            if (tagsDto.isEmpty()) {
                messageSender.sendMessage(update.getMessage().getChatId(),
                        "‚ÑπÔ∏è –í –±–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–µ–≥–æ–≤.\n\nüí° **–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–µ–≥:** `/add_tag <–Ω–∞–∑–≤–∞–Ω–∏–µ>`\n" +
                                "üìù **–ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ –≤–æ–ø—Ä–æ—Å:** `/add_question`");
                return;
            }

            StringBuilder response = new StringBuilder();
            response.append("üè∑Ô∏è **–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–µ–≥–æ–≤:**\n\n");

            for (TagDto tag : tagsDto) {
                response.append("‚Ä¢ #")
                        .append(messageSender.escapeTagForMarkdown(tag.name()))
                        .append("\n");
            }

            response.append("\nüí° **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**\n" +
                    "‚Ä¢ `/show_questions_by_tag <—Ç–µ–≥>` - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤\n" +
                    "‚Ä¢ `/delete_tag <—Ç–µ–≥>` - —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–≥–∞\n(‚ö†Ô∏è —É–¥–∞–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –±–µ–∑ –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤)");

            messageSender.sendMessage(update.getMessage().getChatId(), response.toString());
            logger.info("–°–ø–∏—Å–æ–∫ –∏–∑ {} —Ç–µ–≥–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {}", tagsDto.size(), telegramId);

        } catch (Exception e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–µ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}: {}", telegramId, e.getMessage(), e);
            messageSender.sendMessage(telegramId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–µ–≥–æ–≤");
        }
    }
}
