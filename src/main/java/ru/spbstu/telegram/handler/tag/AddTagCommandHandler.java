package ru.spbstu.telegram.handler.tag;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;
import ru.spbstu.telegram.handler.CommandHandler;
import ru.spbstu.telegram.sender.MessageSender;
import ru.spbstu.telegram.session.AddTagSession;
import ru.spbstu.telegram.utils.SessionManager;
import ru.spbstu.service.TagService;

@Component
public class AddTagCommandHandler extends CommandHandler {
    private final SessionManager sessionManager;
    private final TagService tagService;

    public AddTagCommandHandler(MessageSender messageSender,
                                SessionManager sessionManager, TagService tagService) {
        super(messageSender);
        this.sessionManager = sessionManager;
        this.tagService = tagService;
    }

    @Override
    public String getCommand() {
        return "/add_tag";
    }

    @Override
    public String getDescription() {
        return "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤";
    }

    @Override
    public void handle(Update update) {
        String text = update.getMessage().getText();
        Long telegramId = update.getMessage().getFrom().getId();

        logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /add_tag –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", telegramId, text);
        try {
            String[] parts = text.split(" ");

            if (text.equals("/add_tag")) {
                logger.debug("–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}", telegramId);
                sessionManager.getOrCreate(telegramId, AddTagSession.class);
                messageSender.sendMessage(update.getMessage().getChatId(),
                        "üè∑ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞ (–∞–Ω–≥–ª./—Ä—É—Å., –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤):");
                return;
            }

            String tagName = parts[0].trim().toLowerCase();
            sessionManager.getOrCreate(telegramId, AddTagSession.class);

            if (parts.length > 1 || tagName.isEmpty()) {
                logger.warn("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", telegramId, text);
                messageSender.sendMessage(update.getMessage().getChatId(),
                        "‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã.");
                return;
            }

            if (tagService.findByNameIgnoreCase(tagName).isPresent()) {
                logger.warn("–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–≥ '{}' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}", tagName, telegramId);
                messageSender.sendMessage(update.getMessage().getChatId(),
                        "‚ùå –¢–µ–≥ #" + messageSender.escapeTagForMarkdown(tagName) + " —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.");
                return;
            }

            tagService.createNewTag(telegramId, tagName);
            sessionManager.clearSession(telegramId);

            messageSender.sendMessage(update.getMessage().getChatId(),
                    "‚úÖ –¢–µ–≥ #" + messageSender.escapeTagForMarkdown(tagName) + " –¥–æ–±–∞–≤–ª–µ–Ω!");

            logger.info("–¢–µ–≥ '{}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}", tagName, telegramId);

        } catch (Exception e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}: {}", telegramId, e.getMessage(), e);
            messageSender.sendMessage(telegramId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–≥–∞");
        }
    }
}
