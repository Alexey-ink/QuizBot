package ru.spbstu.api;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ru.spbstu.dto.UserDto;
import ru.spbstu.service.UserService;
import ru.spbstu.telegram.sender.MessageSender;

import java.util.List;

@RestController
@RequestMapping("/admin/users/send-broadcast")
public class BroadcastController {
    private final UserService userService;
    private final MessageSender messageSender;

    public BroadcastController(UserService userService, MessageSender messageSender) {
        this.userService = userService;
        this.messageSender = messageSender;
    }

    private final static String UPDATE_MESSAGE = """
        *üì¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ QuizBot v1.0.1* üéâ

        –í —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ –º—ã —Å–¥–µ–ª–∞–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —É–ª—É—á—à–µ–Ω–∏–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:

        ‚Ä¢ üõ† –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ `/show_quiz_by_tag` –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
        ‚Ä¢ ‚è± –£–±—Ä–∞–Ω —Ç–∞–π–º–∞—É—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Äî —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –≤ —É–¥–æ–±–Ω–æ–º —Ç–µ–º–ø–µ
        ‚Ä¢ üêû –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥, –∫–æ–≥–¥–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å –µ—â—ë –Ω–µ –±—ã–ª –∑–∞–≤–µ—Ä—à—ë–Ω

        üí° *–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:*
        –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –æ—à–∏–±–∫—É ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ @AlexeyShihalev.
        """;

    @PostMapping("/update")
    public ResponseEntity<String> sendUpdateBroadcast() {

        List<UserDto> users = userService.findAll();

        for (UserDto user : users) {
            try {
                messageSender.sendMessage(user.telegram_id(), UPDATE_MESSAGE);
            } catch (Exception e) {
                System.err.println("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é " + user.telegram_id());
            }
        }

        return ResponseEntity.ok("Broadcast –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω " + users.size() + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º");
    }

    @PostMapping("/update/{telegramId}")
    public ResponseEntity<String> sendUpdateToUser(@PathVariable("telegramId") Long telegramId) {
        try {
            messageSender.sendMessage(telegramId, UPDATE_MESSAGE);
            return ResponseEntity.ok("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é " + telegramId);
        } catch (Exception e) {
            return ResponseEntity.internalServerError()
                    .body("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é " + telegramId + ": " + e.getMessage());
        }
    }
}
