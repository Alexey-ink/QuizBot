plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'ru.spbstu'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

application {
    mainClass.set('ru.spbstu.Main')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.telegram:telegrambots:6.9.7.1'
    implementation 'org.springframework:spring-context:6.2.10'
    implementation 'org.springframework:spring-orm:6.2.10'
    implementation 'org.springframework.data:spring-data-jpa:3.5.3'
    implementation 'org.hibernate:hibernate-core:6.6.1.Final'
    implementation 'com.zaxxer:HikariCP:7.0.2'
    implementation 'org.postgresql:postgresql:42.7.7'
    implementation 'ch.qos.logback:logback-classic:1.5.18'
    implementation 'org.quartz-scheduler:quartz:2.5.0'
    implementation 'org.springframework:spring-context-support:6.2.10'
    implementation 'org.springframework:spring-webmvc:6.2.10'
    implementation 'org.springframework.security:spring-security-crypto:6.5.3'

    implementation 'org.eclipse.jetty:jetty-server:11.0.20'
    implementation 'org.eclipse.jetty:jetty-servlet:11.0.20'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.20.0'

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    testImplementation 'org.springframework:spring-test:6.2.10'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
    testImplementation 'org.testcontainers:postgresql:1.19.0'
    testImplementation 'org.hibernate:hibernate-testing:6.4.0.Final'
}

compileJava.options.encoding = 'UTF-8'

test {
    useJUnitPlatform()
}

tasks.named('shadowJar') {
    archiveBaseName.set('quizbot-app')
    archiveClassifier.set('')
    archiveVersion.set(version)
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
}

tasks.build {
    dependsOn tasks.shadowJar
}